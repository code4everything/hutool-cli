{
    "default": {
        "method": "org.code4everything.hutool.unix.Unix4j#unix"
    },
    "encode32": {
        "method": "cn.hutool.core.codec.Base32#encode(string=$sysin)"
    },
    "decode32": {
        "method": "cn.hutool.core.codec.Base32#decodeStr(string=$sysin)"
    },
    "encode64": {
        "method": "cn.hutool.core.codec.Base64#encode(j.char.seq=$sysin)"
    },
    "base64": {
        "method": "cn.hutool.core.codec.Base64#encode(j.char.seq=$sysin)"
    },
    "decode64": {
        "method": "cn.hutool.core.codec.Base64#decodeStr(j.char.seq=$sysin)"
    },
    "encode64url": {
        "method": "cn.hutool.core.codec.Base64#encodeUrlSafe(j.char.seq=$sysin)"
    },
    "date": {
        "method": "cn.hutool.core.date.DateUtil#date(date=now)"
    },
    "unicode2str": {
        "method": "cn.hutool.core.text.UnicodeUtil#toString(string=$sysin)"
    },
    "str2unicode": {
        "method": "cn.hutool.core.text.UnicodeUtil#toUnicode(string=$sysin)"
    },
    "hex": {
        "method": "cn.hutool.core.util.HexUtil#encodeHexStr(string=$sysin)"
    },
    "idinfo": {
        "method": "cn.hutool.core.util.IdcardUtil#getIdcardInfo(string=$sysin)",
        "helps": [
            "parse personal id card info"
        ]
    },
    "uuid": {
        "method": "cn.hutool.core.util.IdUtil#randomUUID"
    },
    "uuid0": {
        "method": "cn.hutool.core.util.IdUtil#simpleUUID"
    },
    "random": {
        "method": "cn.hutool.core.util.RandomUtil#randomString(int=16)"
    },
    "randomi": {
        "method": "cn.hutool.core.util.RandomUtil#randomLong(long=0,long=9223372036854775807)",
        "1param": "long=0,long"
    },
    "randompw": {
        "method": "cn.hutool.core.util.RandomUtil#randomString(string=abcdefghijkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ234567892345678923456789,int=16)",
        "1param": "string=abcdefghijkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ234567892345678923456789,int",
        "helps": [
            "generate random password"
        ]
    },
    "randomc": {
        "method": "cn.hutool.core.img.ImgUtil#randomColor"
    },
    "methods": {
        "method": "utils#outputPublicStaticMethods(string=$sysin)"
    },
    "class": {
        "method": "utils#parseClassName(string=$sysin)"
    },
    "suppers": {
        "method": "utils#getSupperClass(class=$sysin)"
    },
    "match": {
        "method": "utils#getMatchedItems(reg.pattern,string=$sysin)"
    },
    "regex": {
        "method": "cn.hutool.core.util.ReUtil#isMatch(reg.pattern,j.char.seq=$sysin)"
    },
    "upper": {
        "method": "utils#toUpperCase(string=$sysin)"
    },
    "lower": {
        "method": "utils#toLowerCase(string=$sysin)"
    },
    "jinfo": {
        "method": "cn.hutool.core.util.SystemPropsUtil#getProps"
    },
    "md5": {
        "method": "cn.hutool.crypto.SecureUtil#md5(string=$sysin)"
    },
    "sha1": {
        "method": "cn.hutool.crypto.SecureUtil#sha1(string=$sysin)"
    },
    "sha256": {
        "method": "cn.hutool.crypto.SecureUtil#sha256(string=$sysin)"
    },
    "get": {
        "method": "cn.hutool.http.HttpUtil#get(string=$sysin)"
    },
    "post": {
        "method": "cn.hutool.http.HttpUtil#post(string=$sysin,string={})"
    },
    "download": {
        "method": "cn.hutool.http.HttpUtil#downloadFileFromUrl(string=$sysin,file=.)"
    },
    "pinyin": {
        "method": "cn.hutool.extra.pinyin.PinyinUtil#getPinyin(string=$sysin)"
    },
    "qrcode": {
        "method": "cn.hutool.extra.qrcode.QrCodeUtil#generate(string=$sysin,int=1000,int=1000,file=qrcode.png)",
        "2param": "string=$sysin,int=1000,int=1000,file"
    },
    "decodeqr": {
        "method": "cn.hutool.extra.qrcode.QrCodeUtil#decode(file)"
    },
    "lunar": {
        "method": "utils#lunar(date=now)"
    },
    "mkdir": {
        "method": "cn.hutool.core.io.FileUtil#mkdir(file)"
    },
    "calc": {
        "method": "utils#calc(string=$sysin,int=6)"
    },
    "open": {
        "method": "cn.hutool.core.swing.DesktopUtil#open(file=.)"
    },
    "value": {
        "method": "utils#getStaticFieldValue(class,string)"
    },
    "intmax": {
        "method": "utils#getStaticFieldValue(class=j.int,string=MAX_VALUE)"
    },
    "longmax": {
        "method": "utils#getStaticFieldValue(class=j.long,string=MAX_VALUE)"
    },
    "fields": {
        "method": "utils#getFieldNames(class)"
    },
    "dayp": {
        "method": "utils#dayProcess(datetime=now)"
    },
    "repeat": {
        "method": "csu#repeat(j.char.seq,int=2)"
    },
    "find": {
        "method": "file.list#findFile(file=.,string)"
    },
    "calendar": {
        "method": "org.code4everything.hutool.HuCalendar#calendar(str.arr=nil)"
    },
    "tree": {
        "method": "file.list#treeFile(file=.,int=-1)",
        "1param": "file,int=-1"
    },
    "touch": {
        "method": "cn.hutool.core.io.FileUtil#touch(file=NewFile.txt)"
    },
    "cntd": {
        "method": "org.code4everything.hutool.Countdown#datetime(string=$sysin,string=sec)"
    },
    "run": {
        "method": "qe#run(string=$sysin)"
    },
    "env": {
        "method": "qe#run",
        "paramTypes": [
            "@string=System.getenv(nullto(arg0,'').upper())"
        ]
    },
    "lottery": {
        "method": "org.code4everything.hutool.Lottery#lottery"
    },
    "converters": {
        "method": "utils#getConverters()"
    },
    "figlet": {
        "method": "org.code4everything.hutool.figlet.Figlet#ascii(string=$sysin,string=standard)"
    },
    "jq": {
        "method": "org.code4everything.hutool.jq.JacksonJq#queryJson(string,string=$sysin)"
    },
    "csv2json": {
        "method": "org.code4everything.hutool.csv.CSV#toJson(string=$sysin)"
    },
    "unix": {
        "method": "org.code4everything.hutool.unix.Unix4j#unix"
    },
    "fcnt": {
        "method": "org.code4everything.hutool.FileList#countFile(file=.)"
    }
}
